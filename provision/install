#!/usr/bin/env bash
DEBUG=${DEBUG:-false}
$DEBUG && set -x || set +x
set -eou pipefail

BASE_DIR=`cd "$(dirname "$0")"; pwd`

# https://unix.stackexchange.com/questions/6345/how-can-i-get-distribution-name-and-version-number-in-a-simple-shell-script
# https://linuxize.com/post/how-to-check-linux-version/
# https://gist.github.com/natefoo/814c5bf936922dad97ff
detect_distro() {
  if [ -f /etc/os-release ]; then
    # freedesktop.org and systemd
    . /etc/os-release
    OS=$NAME
    VER=${VERSION_ID:-Unknown}
  elif type lsb_release >/dev/null 2>&1; then
    # linuxbase.org
    OS=$(lsb_release -si)
    VER=$(lsb_release -sr)
  elif [ -f /etc/lsb-release ]; then
    # For some versions of Debian/Ubuntu without lsb_release command
    . /etc/lsb-release
    OS=$DISTRIB_ID
    VER=$DISTRIB_RELEASE
  elif [ -f /etc/debian_version ]; then
    # Older Debian/Ubuntu/etc.
    OS=Debian
    VER=$(cat /etc/debian_version)
  else
    echo "Linux distro not suported!"
    exit 1
  fi
}

run_cmd() {
  local cmd
  if [ "$3" = "no args" ]
  then
    cmd="$1 $2"
  else
    cmd="$1 $2 $3"
  fi
  echo "Running \"$cmd\""
  eval "$cmd"
}

run() {
  set -x
  local dir
  local os
  case "$OS" in
    Arch*) os=Arch ;;
    *) os=$OS ;;
  esac
  local origin=$1; shift
  [ USER = vagrant ] && dir=/vagrant/provision || dir=$BASE_DIR
  case "$origin" in
    distro) dir=$dir/$os ;;
    common) dir=$dir/common ;;
  esac
  local script=$1
  local cmd
  [ "$script" = "sudo" ] && {
    cmd="sudo bash" 
    shift; script=$1
  } || cmd="bash"
  shift
  script=$dir/$script
  if [ -f "$script" ]
  then
    run_cmd "$cmd" "$script" "$@"
  elif [ -f "$script.sample" ]
  then
    run_cmd "$cmd" "$script.sample" "$@"
  else
    echo "ERROR: no script named \"$script\" or \"$script.sample\" found!"
    exit 1
  fi
}

main() {
  detect_distro
  local args="$@"
  echo "Provisioning $OS version $VER (with $args) ..."
  run distro sudo install "$args"
  run common install "$args"
  cat <<EOF

\o/ \o/ \o/ \o/ \o/ \o/
-----------------------
Provisioning FINISHED!
-----------------------
EOF
}

cd "$BASE_DIR"
main ${@:-"no args"}
